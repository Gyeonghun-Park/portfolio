[{"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/index.js":"1","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/App.js":"2","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/router/Router.js":"3","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/NotFound.js":"4","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Navigation.js":"5","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/NavItem.js":"6","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Tag.js":"7","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/index.js":"8","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Home.js":"9","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Container.js":"10","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/AnimationText.js":"11","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/Typography.js":"12","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/visual.js":"13","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/text.js":"14","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/particle.js":"15","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/index.js":"16","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/About.js":"17","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/TextCotainer.js":"18","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/SwingBox.js":"19","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/point.js":"20","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/dialog.js":"21","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/index.js":"22","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Skills.js":"23","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/index.js":"24","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Portfolio.js":"25","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/TagCloud.js":"26","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/IconList.js":"27","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/IconTag.js":"28","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/index.js":"29","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Contact.js":"30","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Left/Email.js":"31","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Right/Map.js":"32","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/CardContainer.js":"33","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Card.js":"34","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/imgDialog.js":"35","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/iconList.js":"36","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/01/guberEats.js":"37","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/projectList.js":"38","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/02/landBnb.js":"39","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/04/wetube.js":"40","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/03/landBnbApp.js":"41","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/05/gwitter.js":"42","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/06/getflix.js":"43","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/07/govies.js":"44","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/08/weatherApp.js":"45","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/09/coronaDashboard.js":"46"},{"size":279,"mtime":1609196332510,"results":"47","hashOfConfig":"48"},{"size":104,"mtime":1608360863009,"results":"49","hashOfConfig":"48"},{"size":1011,"mtime":1608787926935,"results":"50","hashOfConfig":"48"},{"size":343,"mtime":1613364610112,"results":"51","hashOfConfig":"48"},{"size":4947,"mtime":1612311111100,"results":"52","hashOfConfig":"48"},{"size":689,"mtime":1609302553627,"results":"53","hashOfConfig":"48"},{"size":515,"mtime":1610912297114,"results":"54","hashOfConfig":"48"},{"size":48,"mtime":1608239196228,"results":"55","hashOfConfig":"48"},{"size":1187,"mtime":1610913026320,"results":"56","hashOfConfig":"48"},{"size":955,"mtime":1610912705380,"results":"57","hashOfConfig":"48"},{"size":1570,"mtime":1610918017761,"results":"58","hashOfConfig":"48"},{"size":3851,"mtime":1610515955796,"results":"59","hashOfConfig":"48"},{"size":2079,"mtime":1610516362760,"results":"60","hashOfConfig":"48"},{"size":1737,"mtime":1610897894448,"results":"61","hashOfConfig":"48"},{"size":702,"mtime":1608928079939,"results":"62","hashOfConfig":"48"},{"size":51,"mtime":1608787894900,"results":"63","hashOfConfig":"48"},{"size":2611,"mtime":1611184690812,"results":"64","hashOfConfig":"48"},{"size":2332,"mtime":1610918091075,"results":"65","hashOfConfig":"48"},{"size":5108,"mtime":1610572228204,"results":"66","hashOfConfig":"48"},{"size":643,"mtime":1608788506820,"results":"67","hashOfConfig":"48"},{"size":2859,"mtime":1610571429900,"results":"68","hashOfConfig":"48"},{"size":54,"mtime":1608959833176,"results":"69","hashOfConfig":"48"},{"size":3203,"mtime":1610921044520,"results":"70","hashOfConfig":"48"},{"size":63,"mtime":1609045821216,"results":"71","hashOfConfig":"48"},{"size":802,"mtime":1610924988799,"results":"72","hashOfConfig":"48"},{"size":2768,"mtime":1611624946216,"results":"73","hashOfConfig":"48"},{"size":300,"mtime":1610918453823,"results":"74","hashOfConfig":"48"},{"size":944,"mtime":1610918994937,"results":"75","hashOfConfig":"48"},{"size":57,"mtime":1609194265294,"results":"76","hashOfConfig":"48"},{"size":615,"mtime":1609214047376,"results":"77","hashOfConfig":"48"},{"size":4427,"mtime":1610921303560,"results":"78","hashOfConfig":"48"},{"size":7593,"mtime":1611030346539,"results":"79","hashOfConfig":"48"},{"size":9446,"mtime":1610923805943,"results":"80","hashOfConfig":"48"},{"size":11311,"mtime":1611016923379,"results":"81","hashOfConfig":"48"},{"size":2740,"mtime":1610913801442,"results":"82","hashOfConfig":"48"},{"size":5163,"mtime":1610684392733,"results":"83","hashOfConfig":"48"},{"size":2215,"mtime":1610690110328,"results":"84","hashOfConfig":"48"},{"size":648,"mtime":1611019976790,"results":"85","hashOfConfig":"48"},{"size":2175,"mtime":1610934215062,"results":"86","hashOfConfig":"48"},{"size":1869,"mtime":1611944249595,"results":"87","hashOfConfig":"48"},{"size":1601,"mtime":1611017393521,"results":"88","hashOfConfig":"48"},{"size":1287,"mtime":1611019881189,"results":"89","hashOfConfig":"48"},{"size":1054,"mtime":1611027689477,"results":"90","hashOfConfig":"48"},{"size":1233,"mtime":1611029301660,"results":"91","hashOfConfig":"48"},{"size":827,"mtime":1611021590373,"results":"92","hashOfConfig":"48"},{"size":1004,"mtime":1612040552212,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"11iiqjl",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/index.js",[],["196","197"],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/App.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/router/Router.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/NotFound.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Navigation.js",["198"],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/NavItem.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Tag.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/index.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Home.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/Container.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/AnimationText.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/Typography.js",["199","200","201"],"import { useEffect, useRef } from \"react\";\nimport WebFont from \"webfontloader\";\nimport * as PIXI from \"pixi.js\";\nimport Visual from \"./visual\";\nimport pointer from \"../../../img/pointer.png\";\n\nconst Typography = () => {\n  //SPA with PIXI\n  const targetRef = useRef();\n  let visual = new Visual();\n  let stage = new PIXI.Container();\n  let renderer = new PIXI.Renderer({\n    width: 0,\n    height: 0,\n    antialias: true,\n    transparent: false,\n    resolution: window.devicePixelRatio > 1 ? 2 : 1,\n    autoDensity: true,\n    powerPreference: \"high-performance\",\n    backgroundColor: 0x222222,\n  });\n  let blurFilter = new PIXI.filters.BlurFilter();\n\n  const createCursor = () => {\n    if (targetRef.current) {\n      const container = document.createElement(\"div\");\n      container.className =\n        \"absolute flex items-center w-8 transition duration-1000 transform opacity-0 top-1/2 left-1/4 animate__animated\";\n      const cursorIcon = document.createElement(\"img\");\n      cursorIcon.src = pointer;\n      const cursorText = document.createElement(\"div\");\n      cursorText.className =\n        \"px-3 py-2 ml-1 text-sm text-white rounded-full bg-black-500\";\n      cursorText.innerText = \"Move\";\n\n      container.appendChild(cursorIcon);\n      container.appendChild(cursorText);\n      targetRef.current.appendChild(container);\n\n      setTimeout(() => {\n        container.classList.remove(\"opacity-0\");\n        container.classList.add(\"animate__tada\");\n      }, 3000);\n      setTimeout(() => {\n        container.classList.remove(\"animate__animated\");\n      }, 3900);\n      setTimeout(() => {\n        container.classList.add(\"translate-x-96\");\n      }, 4000);\n      setTimeout(() => {\n        container.classList.add(\"opacity-0\");\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    setWebgl();\n\n    WebFont.load({\n      google: {\n        families: [\"Hind:700\"],\n      },\n      fontactive: () => {\n        window.addEventListener(\"resize\", resize);\n        resize();\n\n        requestAnimationFrame(animate);\n      },\n    });\n\n    setTimeout(() => {\n      createCursor();\n    }, 2000);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n      stage.destroy();\n      stage = null;\n      renderer.destroy();\n      renderer = null;\n      blurFilter.destroy();\n      visual.destroy();\n      visual = null;\n    };\n  }, []);\n\n  const setWebgl = () => {\n    targetRef.current.appendChild(renderer.view);\n\n    blurFilter.blur = 10;\n    blurFilter.autoFit = true;\n\n    const fragSource = `\n      precision mediump float;\n      varying vec2 vTextureCoord;\n      uniform sampler2D uSampler;\n      uniform float threshold;\n      uniform float mr;\n      uniform float mg;\n      uniform float mb;\n      void main(void) {\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec3 mcolor = vec3(mr, mg, mb);\n        if (color.a > threshold) {\n          gl_FragColor = vec4(mcolor, 1.0);\n        } else {\n          gl_FragColor = vec4(vec3(0.0) ,0.0);\n        }\n      }\n    `;\n\n    const uniformsData = {\n      threshold: 0.5,\n      mr: 8.0 / 255.0,\n      mg: 253.0 / 255.0,\n      mb: 216.0 / 255.0,\n    };\n\n    const thresholdFilter = new PIXI.Filter(null, fragSource, uniformsData);\n    stage.filters = [blurFilter, thresholdFilter];\n    stage.filterArea = renderer.screen;\n  };\n\n  const resize = () => {\n    renderer.resize(\n      targetRef.current.clientWidth,\n      targetRef.current.clientHeight\n    );\n    visual.show(\n      targetRef.current.clientWidth,\n      targetRef.current.clientHeight,\n      stage\n    );\n  };\n\n  const animate = () => {\n    if (visual) {\n      requestAnimationFrame(animate);\n      visual.animate();\n      renderer.render(stage);\n    }\n  };\n\n  return (\n    <div\n      ref={targetRef}\n      className=\"relative flex justify-center w-full h-full cursor-pointer\"\n    ></div>\n  );\n};\n\nexport default Typography;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/visual.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/text.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Home/Right/particle.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/index.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/About.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/components/TextCotainer.js",["202"],"import { useEffect, useState } from \"react\";\nimport AnimationText from \"./AnimationText\";\nimport Tag from \"./Tag\";\nimport G from \"../img/G.png\";\nimport clsx from \"clsx\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst TextCotainer = ({ sentences, isTitle }) => {\n  let milliseconds = 1000;\n\n  const textFactory = (sentence) => {\n    let texts = [];\n    for (let i = 0; i < sentence.length; i++) {\n      texts.push(sentence[i]);\n    }\n    return texts;\n  };\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div className={clsx(\"relative px-12 py-4\", \"xl:py-0\")}>\n      <Tag\n        top={mobileOpen ? \"2\" : \"-5\"}\n        left={mobileOpen ? \"7\" : \"5\"}\n        text=\"h1\"\n      />\n      {sentences.map((sentence, i) => {\n        const tmp = textFactory(sentence).map((text, j) => {\n          milliseconds += 100;\n          if (text !== \"G\") {\n            if (text === \" \") {\n              return <span key={`${i}${j}`} className=\"w-5\"></span>;\n            }\n            return (\n              <AnimationText\n                key={`${i}${j}`}\n                text={text}\n                milliseconds={milliseconds}\n                isTitle={isTitle}\n              />\n            );\n          } else {\n            return (\n              <AnimationText\n                key={`${i}${j}`}\n                img={G}\n                milliseconds={milliseconds}\n                isTitle={isTitle}\n              />\n            );\n          }\n        });\n        return (\n          <div key={i} className=\"flex flex-wrap\">\n            {tmp}\n          </div>\n        );\n      })}\n      <Tag\n        bottom={mobileOpen ? \"1\" : \"-8\"}\n        left={mobileOpen ? \"7\" : \"5\"}\n        text=\"/h1\"\n      />\n    </div>\n  );\n};\n\nexport default TextCotainer;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/SwingBox.js",["203"],"import { useEffect, useRef, useState } from \"react\";\nimport Point from \"./point.js\";\nimport Dialog from \"./dialog.js\";\nimport ImgDialog from \"./imgDialog.js\";\nimport drag from \"../../../img/drag.png\";\n\nconst SwingBox = () => {\n  const targetRef = useRef();\n  const [canvas] = useState(document.createElement(\"canvas\"));\n  let ctx;\n  let animations = [];\n\n  const pixelRatio = window.devicePixelRatio > 1 ? 1 : 1;\n\n  const mousePos = new Point();\n  let curItem = null;\n\n  const items = [];\n  //const total = 3;\n\n  useEffect(() => {\n    items[0] = new ImgDialog();\n    items[1] = new Dialog(\"Gyeonghun\");\n    items[2] = new Dialog(\"Park\");\n\n    targetRef.current.appendChild(canvas);\n    canvas.classList.add(\"cursor-grab\");\n    ctx = canvas.getContext(\"2d\");\n\n    window.addEventListener(\"resize\", resize);\n    resize();\n\n    animations.push(window.requestAnimationFrame(animate));\n\n    document.addEventListener(\"pointerdown\", onDown);\n    document.addEventListener(\"pointermove\", onMove);\n    document.addEventListener(\"pointerup\", onUp);\n    createCursor();\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n      document.removeEventListener(\"pointerdown\", onDown);\n      document.removeEventListener(\"pointermove\", onMove);\n      document.removeEventListener(\"pointerup\", onUp);\n      animations.forEach((animation) => cancelAnimationFrame(animation));\n    };\n  }, []);\n\n  const createCursor = () => {\n    if (targetRef.current) {\n      const container = document.createElement(\"div\");\n      container.className =\n        \"absolute flex items-center w-8 transition duration-1000 transform opacity-0 top-20 left-20 animate__animated\";\n      const cursorIcon = document.createElement(\"img\");\n      cursorIcon.src = drag;\n      const cursorText = document.createElement(\"div\");\n      cursorText.className =\n        \"px-3 py-2 ml-1 text-sm text-white rounded-full bg-black-500\";\n      cursorText.innerText = \"Drag\";\n\n      container.appendChild(cursorIcon);\n      container.appendChild(cursorText);\n      targetRef.current.appendChild(container);\n\n      setTimeout(() => {\n        container.classList.remove(\"opacity-0\");\n        container.classList.add(\"animate__tada\");\n      }, 2000);\n      setTimeout(() => {\n        container.classList.remove(\"animate__animated\");\n      }, 1900);\n      setTimeout(() => {\n        container.classList.add(\"translate-x-96\");\n        container.classList.add(\"translate-y-96\");\n      }, 3000);\n      setTimeout(() => {\n        container.classList.add(\"opacity-0\");\n      }, 4000);\n    }\n  };\n\n  const resize = () => {\n    canvas.width = targetRef.current.clientWidth * pixelRatio;\n    canvas.height = targetRef.current.clientHeight * pixelRatio;\n    ctx.scale(pixelRatio, pixelRatio);\n\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 3;\n    ctx.shadowBlur = 6;\n    ctx.shadowColor = \"rgba(0, 0, 0, 0.1)\";\n\n    ctx.lineWidth = 2;\n\n    for (let i = 0; i < items.length; i++) {\n      items[i].resize(\n        targetRef.current.clientWidth,\n        targetRef.current.clientHeight\n      );\n    }\n  };\n\n  const animate = () => {\n    animations.push(window.requestAnimationFrame(animate));\n\n    if (targetRef.current) {\n      ctx.clearRect(\n        0,\n        0,\n        targetRef.current.clientWidth,\n        targetRef.current.clientHeight\n      );\n    }\n\n    for (let i = 0; i < items.length; i++) {\n      items[i].animate(ctx);\n    }\n\n    if (curItem) {\n      ctx.fillStyle = \"#ff4338\";\n      ctx.strokeStyle = \"#ff4338\";\n\n      ctx.beginPath();\n      ctx.arc(mousePos.x, mousePos.y, 8, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.arc(curItem.centerPos.x, curItem.centerPos.y, 8, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.moveTo(mousePos.x, mousePos.y);\n      ctx.lineTo(curItem.centerPos.x, curItem.centerPos.y);\n      ctx.stroke();\n    }\n  };\n\n  const onDown = (e) => {\n    canvas.classList.remove(\"cursor-grab\");\n    canvas.classList.add(\"cursor-grabbing\");\n\n    const rect = e.target.getBoundingClientRect();\n    if (e.clientX > targetRef.current.clientWidth) {\n      mousePos.x = e.clientX - rect.left;\n      mousePos.y = e.clientY - rect.top;\n    }\n\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i].down(mousePos.clone());\n      if (item) {\n        curItem = item;\n        const index = items.indexOf(item);\n        items.push(items.splice(index, 1)[0]);\n        break;\n      }\n    }\n  };\n\n  const onMove = (e) => {\n    const rect = e.target.getBoundingClientRect();\n    if (e.target.tagName === \"CANVAS\") {\n      mousePos.x = e.clientX - rect.left;\n      mousePos.y = e.clientY - rect.top;\n      for (let i = 0; i < items.length; i++) {\n        items[i].move(mousePos.clone());\n      }\n    }\n  };\n\n  const onUp = (e) => {\n    canvas.classList.remove(\"cursor-grabbing\");\n    canvas.classList.add(\"cursor-grab\");\n    curItem = null;\n\n    for (let i = 0; i < items.length; i++) {\n      items[i].up();\n    }\n  };\n\n  return (\n    <div\n      ref={targetRef}\n      className=\"relative w-full h-full\"\n      id={\"swingCanvas\"}\n    ></div>\n  );\n};\n\nexport default SwingBox;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/point.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/dialog.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/index.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Skills.js",["204"],"import clsx from \"clsx\";\nimport { Link } from \"react-router-dom\";\nimport PageContainer from \"../../components/Container\";\nimport TextCotainer from \"../../components/TextCotainer\";\nimport TagCloud from \"./Right/TagCloud\";\nimport { useEffect, useState } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst Skills = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <PageContainer\n      left={\n        <div\n          className={clsx(\n            \"flex flex-col items-center justify-center pt-10 pb-5\",\n            \"xl:pb-0\"\n          )}\n        >\n          <div className=\"xl:w-10/12\">\n            <TextCotainer sentences={[\"Skills & Abilities\"]} isTitle />\n          </div>\n          <div\n            className={clsx(\n              \"w-9/12 text-gray-300\",\n              \"xl:my-10 xl:mb-5\",\n              \"2xl:text-xl\"\n            )}\n          >\n            I have a firm knowledge of HTML, CSS and JavaScript language and\n            possess a good knowledge of computer software packages (frameworks\n            and tools) that are used in today’s technology.\n          </div>\n          <div\n            className={clsx(\n              \"w-9/12 mb-10 text-gray-300\",\n              \"xl:mb-5\",\n              \"2xl:text-xl\"\n            )}\n          >\n            I know the importance of staying on top of the latest development\n            trends. From DevSecOps to low-code apps, software development trends\n            change as fast as technology itself. So I am experiencing as many\n            things as I can to adapt to the fast-changing trends at any time.\n          </div>\n          <div\n            className={clsx(\n              \"w-9/12 mb-10 text-gray-300\",\n              \"xl:mb-5\",\n              \"2xl:text-xl\"\n            )}\n          >\n            On the {mobileOpen ? \"below\" : \"right\"} is a sphere made up of my\n            proficient programming languages and technical skills. If you want\n            to know about their details, click the icon.\n          </div>\n          <div className=\"w-9/12 text-gray-300\">\n            Visit my&nbsp;\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://github.com/Gyeonghun-Park\"\n              className=\"underline text-prime\"\n            >\n              GitHub\n            </a>\n            &nbsp;profile for more details or just&nbsp;\n            <Link to=\"/contact\" className=\"underline text-prime\">\n              contact\n            </Link>\n            &nbsp;me&nbsp;\n          </div>\n        </div>\n      }\n      right={<TagCloud />}\n    />\n  );\n};\n\nexport default Skills;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/index.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Portfolio.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/TagCloud.js",["205","206","207"],"import { useEffect, useRef, useState } from \"react\";\nimport IconList from \"./IconList\";\nimport { icons } from \"../../../iconList\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst TagCloud = () => {\n  const targetRef = useRef();\n  const [canvas] = useState(document.createElement(\"canvas\"));\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    canvas.width = targetRef.current.clientWidth;\n    canvas.height = targetRef.current.clientHeight;\n    canvas.id = \"myCanvas\";\n    targetRef.current.appendChild(canvas);\n    window.addEventListener(\"resize\", resize);\n    window.addEventListener(\"resize\", handleResize);\n    if (mobileOpen) {\n      eval(\n        `try {\n          TagCanvas.Start(\"myCanvas\", \"tags\", {\n            outlineMethod: \"none\",\n            maxSpeed : 0.06,\n            freezeActive:true,\n            shuffleTags:true,\n            shape:'sphere',\n            zoom:0.8,\n            pinchZoom:true,\n            freezeDecel:true,\n            fadeIn:3000,\n            initial: [0.3,-0.1],\n            depth : 1.1\n          });\n        } catch (e) {\n          document.getElementById(\"myCanvasContainer\").style.display = \"none\";\n        }`\n      );\n    } else {\n      eval(\n        `try {\n          TagCanvas.Start(\"myCanvas\", \"tags\", {\n            outlineMethod: \"size\",\n            outlineIncrease: 15,\n            maxSpeed : 0.06,\n            freezeActive:true,\n            shuffleTags:true,\n            shape:'sphere',\n            zoom:0.8,\n            pinchZoom:true,\n            freezeDecel:true,\n            fadeIn:3000,\n            initial: [0.3,-0.1],\n            depth : 1.1\n          });\n        } catch (e) {\n          document.getElementById(\"myCanvasContainer\").style.display = \"none\";\n        }`\n      );\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const resize = () => {\n    canvas.width = targetRef.current.clientWidth;\n    canvas.height = targetRef.current.clientHeight;\n  };\n\n  return (\n    <div className=\"flex justify-center w-full h-full max-h-full\">\n      <div ref={targetRef} className=\"w-full\" id=\"myCanvasContainer\"></div>\n      <div className=\"absolute flex w-full\">\n        <IconList icons={icons} />\n      </div>\n    </div>\n  );\n};\n\nexport default TagCloud;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/IconList.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Skills/Right/IconTag.js",["208"],"import { useEffect, useState } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst IconTag = ({ icon, url }) => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <a target=\"_blank\" rel=\"noreferrer\" href={url}>\n      <img src={icon} alt={icon} className={mobileOpen ? \"w-8 h-8\" : \"\"} />\n    </a>\n  );\n};\n\nexport default IconTag;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/index.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Contact.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Left/Email.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Contact/Right/Map.js",["209"],"import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport markerIcon from \"../../../img/marker.svg\";\nimport { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst Map = () => {\n  const LAT = 42.999788256588396;\n  const LNG = -81.24519473906872;\n  const renderMarkers = (map, maps) => {\n    let marker = new maps.Marker({\n      position: { lat: LAT, lng: LNG },\n      map,\n      animation: window.google.maps.Animation.DROP,\n      icon: {\n        url: markerIcon,\n        scaledSize: mobileOpen\n          ? new window.google.maps.Size(50, 50)\n          : new window.google.maps.Size(120, 120),\n      },\n    });\n    return marker;\n  };\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div className=\"relative w-full h-full mt-16\">\n      <p\n        className={clsx(\n          \"text-sm absolute z-10 max-w-xs p-2 text-white whitespace-pre-line bg-nav left-0 -top-2 bg-opacity-90 animate__animated animate__fadeInUp\",\n          \"lg:left-10 lg:top-5 lg:text-lg lg:p-5\"\n        )}\n      >\n        {`Gyeonghun Park \n          London, Ontario, Canada\n          \n          `}\n        <span className=\"text-prime\">@</span>\n        <span>: gp112795@gmail.com</span>\n      </p>\n      <div className=\"absolute w-full outline-none bottom-1 h-full\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_KEY }}\n          defaultCenter={\n            mobileOpen\n              ? {\n                  lat: LAT + 2.5,\n                  lng: LNG - 4,\n                }\n              : {\n                  lat: LAT + 4,\n                  lng: LNG - 4,\n                }\n          }\n          defaultZoom={mobileOpen ? 5 : 6}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\n          options={{\n            disableDefaultUI: true,\n            backgroundColor: \"none\",\n            styles: [\n              {\n                featureType: \"all\",\n                elementType: \"labels.text.fill\",\n                stylers: [\n                  {\n                    color: \"#ffffff\",\n                  },\n                ],\n              },\n              {\n                featureType: \"all\",\n                elementType: \"labels.text.stroke\",\n                stylers: [\n                  {\n                    visibility: \"off\",\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    visibility: \"on\",\n                  },\n                  {\n                    color: \"#012621\",\n                  },\n                  {\n                    weight: 0.8,\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative.country\",\n                elementType: \"labels\",\n                stylers: [\n                  {\n                    color: \"#012621\",\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative.country\",\n                elementType: \"labels.text\",\n                stylers: [\n                  {\n                    color: \"#0c0000\",\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative.province\",\n                elementType: \"labels.text\",\n                stylers: [\n                  {\n                    color: \"#012621\",\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative.locality\",\n                elementType: \"labels.text\",\n                stylers: [\n                  {\n                    color: \"#012621\",\n                  },\n                ],\n              },\n              {\n                featureType: \"administrative.neighborhood\",\n                elementType: \"labels.text\",\n                stylers: [\n                  {\n                    color: \"#012621\",\n                  },\n                ],\n              },\n              {\n                featureType: \"landscape\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                ],\n              },\n              {\n                featureType: \"poi\",\n                elementType: \"all\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                  {\n                    lightness: -7,\n                  },\n                ],\n              },\n              {\n                featureType: \"poi.park\",\n                elementType: \"all\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                ],\n              },\n              {\n                featureType: \"road\",\n                elementType: \"geometry.stroke\",\n                stylers: [\n                  {\n                    color: \"#ffffff\",\n                  },\n                  {\n                    weight: 0.3,\n                  },\n                  {\n                    lightness: 10,\n                  },\n                ],\n              },\n              {\n                featureType: \"road.highway\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#047968\",\n                  },\n                  {\n                    lightness: \"-7\",\n                  },\n                ],\n              },\n              {\n                featureType: \"road.arterial\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                  {\n                    visibility: \"on\",\n                  },\n                  {\n                    lightness: -15,\n                  },\n                ],\n              },\n              {\n                featureType: \"road.local\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                  {\n                    lightness: \"7\",\n                  },\n                ],\n              },\n              {\n                featureType: \"transit\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#06c5a9\",\n                  },\n                  {\n                    lightness: -34,\n                  },\n                ],\n              },\n              {\n                featureType: \"water\",\n                elementType: \"geometry\",\n                stylers: [\n                  {\n                    color: \"#222222\",\n                  },\n                ],\n              },\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/CardContainer.js",["210","211","212","213","214"],"import { useLayoutEffect, useRef, useState } from \"react\";\nimport Card from \"./Card\";\nimport { projectList, backGrounds } from \"./Projects/projectList\";\n\nconst CardContainer = ({ parentRef }) => {\n  const cardContainer = useRef();\n  const [modalIsOpen, setModalIsOpen] = useState({\n    0: false,\n  });\n  let cardWidth = 0.0;\n  let totalCardIndex = 0;\n  let middleCard = 0;\n  let cardOffset = 0.0;\n  let inProgress = false;\n  const ANIMATION_DURATION = 200;\n  const CARD_SCALE = 0.95;\n  const TRANSLATE_Y = -50;\n\n  let isDown = false;\n  let moveX = 0;\n  let offsetX = 0;\n  let animations = [];\n\n  useLayoutEffect(() => {\n    cardWidth = parseFloat(\n      getComputedStyle(cardContainer.current.children[0]).width\n    );\n    totalCardIndex = cardContainer.current.children.length - 1;\n    middleCard = Math.floor(totalCardIndex / 2);\n    cardOffset = cardWidth * (1 / 5);\n\n    animations.push(window.requestAnimationFrame(animate));\n    document.addEventListener(\"pointerdown\", onDown);\n    document.addEventListener(\"pointermove\", onMove);\n    document.addEventListener(\"pointerup\", onUp);\n\n    linkCards();\n    orderCards();\n    offsetCards();\n    cascadeCards();\n    transformCards();\n    nextCard();\n\n    return () => {\n      animations.forEach((animation) => cancelAnimationFrame(animation));\n      document.removeEventListener(\"pointerdown\", onDown);\n      document.removeEventListener(\"pointermove\", onMove);\n      document.removeEventListener(\"pointerup\", onUp);\n    };\n  }, []);\n\n  const linkCards = () => {\n    for (let i = 0; i <= totalCardIndex; i++) {\n      cardContainer.current.children[i].addEventListener(\"click\", (e) => {\n        const currentIndex = Array.from(e.path[1].children).indexOf(e.path[0]);\n        let totalTime = 0;\n        if (currentIndex < middleCard) {\n          for (let j = 0; j < middleCard - currentIndex; j++) {\n            totalTime += ANIMATION_DURATION + 20;\n            setTimeout(() => previousCard(), totalTime);\n          }\n        } else if (currentIndex > middleCard) {\n          for (let j = 0; j < currentIndex - middleCard; j++) {\n            totalTime += ANIMATION_DURATION + 20;\n            setTimeout(() => nextCard(), totalTime);\n          }\n        } else {\n          const tmp = {};\n          tmp[i] = true;\n          setModalIsOpen((prev) => ({ ...prev, ...tmp }));\n          return;\n        }\n        const tmp = {};\n        tmp[i] = true;\n        totalTime += ANIMATION_DURATION * 3;\n        setTimeout(\n          () => setModalIsOpen((prev) => ({ ...prev, ...tmp })),\n          totalTime\n        );\n      });\n    }\n  };\n\n  const orderCards = () => {\n    let counterLeft = middleCard;\n    let counterRight = 1;\n\n    for (let i = 0; i <= totalCardIndex; i++) {\n      if (i < middleCard) {\n        cardContainer.current.children[i].style.left = `-${\n          cardWidth * counterLeft--\n        }px`;\n      } else if (i > middleCard) {\n        cardContainer.current.children[i].style.left = `${\n          cardWidth * counterRight++\n        }px`;\n      } else {\n        cardContainer.current.children[i].style.left = \"0px\";\n      }\n    }\n  };\n\n  const offsetCards = () => {\n    let counterLeft = middleCard;\n    let counterRight = 1;\n\n    for (let i = 0; i <= totalCardIndex; i++) {\n      let currentLeft = parseFloat(\n        cardContainer.current.children[i].style.left\n      );\n\n      if (i < middleCard) {\n        cardContainer.current.children[i].style.left = `${\n          currentLeft + cardOffset * counterLeft--\n        }px`;\n      } else if (i > middleCard) {\n        cardContainer.current.children[i].style.left = `${\n          currentLeft - cardOffset * counterRight++\n        }px`;\n      }\n    }\n  };\n\n  const cascadeCards = () => {\n    for (let i = 0; i <= totalCardIndex; i++) {\n      if (i <= middleCard) {\n        cardContainer.current.children[i].style.zIndex = i;\n      } else if (i > middleCard) {\n        cardContainer.current.children[i].style.zIndex = -1.0 * i;\n      }\n    }\n  };\n\n  const transformCards = () => {\n    let counterLeft = middleCard;\n    let counterRight = 1;\n\n    for (let i = 0; i <= totalCardIndex; i++) {\n      if (i < middleCard) {\n        cardContainer.current.children[i].style.transform = `scale(${Math.pow(\n          CARD_SCALE,\n          counterLeft\n        )}) translateY(${TRANSLATE_Y + counterLeft-- * 12}px)`;\n      } else if (i > middleCard) {\n        cardContainer.current.children[i].style.transform = `scale(${Math.pow(\n          CARD_SCALE,\n          counterRight\n        )}) translateY(${TRANSLATE_Y + counterRight++ * 12}px)`;\n      } else {\n        cardContainer.current.children[\n          middleCard\n        ].style.transform = `scale(1) translateY(${TRANSLATE_Y}px)`;\n      }\n    }\n  };\n\n  const nextCard = () => {\n    if (!inProgress && cardContainer.current) {\n      inProgress = true;\n\n      const lastCardLeft =\n        cardContainer.current.children[totalCardIndex].style.left;\n      const lastCardTransform =\n        cardContainer.current.children[totalCardIndex].style.transform;\n      const lastCardZIndex =\n        cardContainer.current.children[totalCardIndex].style.zIndex;\n\n      for (let i = totalCardIndex; i > 0; i--) {\n        const card = cardContainer.current.children[i];\n\n        card.style.transitionDuration = \"0.5s\";\n        card.style.left = cardContainer.current.children[i - 1].style.left;\n        card.style.transform =\n          cardContainer.current.children[i - 1].style.transform;\n        card.style.zIndex = cardContainer.current.children[i - 1].style.zIndex;\n      }\n      cardContainer.current.children[0].style.transitionDuration = \"0.2s\";\n      cardContainer.current.children[0].style.transform = \"scale(0)\";\n\n      setTimeout(() => {\n        if (cardContainer.current) {\n          cardContainer.current.children[0].style.left = lastCardLeft;\n          cardContainer.current.children[0].style.zIndex = lastCardZIndex;\n          cardContainer.current.append(cardContainer.current.children[0]);\n        }\n\n        setTimeout(() => {\n          if (cardContainer.current) {\n            cardContainer.current.children[\n              totalCardIndex\n            ].style.transitionDuration = \"0.2s\";\n            cardContainer.current.children[\n              totalCardIndex\n            ].style.transform = lastCardTransform;\n\n            inProgress = false;\n          }\n        }, 10);\n      }, ANIMATION_DURATION);\n    }\n  };\n\n  const previousCard = () => {\n    if (!inProgress && cardContainer.current) {\n      inProgress = true;\n\n      const firstCardLeft = cardContainer.current.children[0].style.left;\n      const firstCardTransform =\n        cardContainer.current.children[0].style.transform;\n      const firstCardZIndex = cardContainer.current.children[0].style.zIndex;\n\n      for (let i = 0; i < totalCardIndex; i++) {\n        const card = cardContainer.current.children[i];\n\n        card.style.transitionDuration = \"0.5s\";\n        card.style.left = cardContainer.current.children[i + 1].style.left;\n        card.style.transform =\n          cardContainer.current.children[i + 1].style.transform;\n        card.style.zIndex = cardContainer.current.children[i + 1].style.zIndex;\n      }\n      cardContainer.current.children[totalCardIndex].style.transitionDuration =\n        \"0.2s\";\n      cardContainer.current.children[totalCardIndex].style.transform =\n        \"scale(0)\";\n\n      setTimeout(() => {\n        if (cardContainer.current) {\n          cardContainer.current.children[\n            totalCardIndex\n          ].style.left = firstCardLeft;\n          cardContainer.current.children[\n            totalCardIndex\n          ].style.zIndex = firstCardZIndex;\n          cardContainer.current.insertBefore(\n            cardContainer.current.children[totalCardIndex],\n            cardContainer.current.children[0]\n          );\n        }\n\n        setTimeout(() => {\n          if (cardContainer.current) {\n            cardContainer.current.children[0].style.transitionDuration = \"0.2s\";\n            cardContainer.current.children[0].style.transform = firstCardTransform;\n\n            inProgress = false;\n          }\n        }, 10);\n      }, ANIMATION_DURATION);\n    }\n  };\n\n  const onDown = (e) => {\n    parentRef.current.classList.remove(\"cursor-grab\");\n    parentRef.current.classList.add(\"cursor-grabbing\");\n    isDown = true;\n    moveX = 0;\n    offsetX = e.clientX;\n  };\n\n  const onMove = (e) => {\n    if (isDown) {\n      moveX = e.clientX - offsetX;\n      offsetX = e.clientX;\n    }\n  };\n\n  const onUp = () => {\n    parentRef.current.classList.remove(\"cursor-grabbing\");\n    parentRef.current.classList.add(\"cursor-grab\");\n    isDown = false;\n  };\n\n  const animate = () => {\n    window.requestAnimationFrame(animate);\n\n    if (isDown) {\n      moveX *= 0.92;\n      if (moveX > 1) {\n        nextCard();\n      } else if (moveX < -1) {\n        previousCard();\n      }\n    }\n  };\n\n  return (\n    <>\n      <div ref={cardContainer} className=\"absolute top-1/2 mr-56\">\n        {projectList.map((project, i) => (\n          <Card\n            key={i}\n            bg={backGrounds[i]}\n            cover={project.cover}\n            previews={project.previews}\n            title={project.title}\n            icons={project.icons}\n            cfs={project.cfs}\n            demo={project.demo}\n            code={project.code}\n            index={i}\n            modalIsOpen={modalIsOpen}\n            setModalIsOpen={setModalIsOpen}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CardContainer;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Card.js",["215"],"import Modal from \"react-modal\";\nimport { Fade } from \"react-slideshow-image\";\nimport \"react-slideshow-image/dist/styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBan,\n  faCheck,\n  faCode,\n  faEye,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst customStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(34, 34, 34, 0.25)\",\n    zIndex: 30,\n  },\n  content: {\n    position: \"absolute\",\n    top: \"8vh\",\n    left: \"15vw\",\n    right: \"15vw\",\n    bottom: \"8vh\",\n    border: \"1px solid #3b3b3b\",\n    background: \"#222222\",\n    WebkitOverflowScrolling: \"touch\",\n    borderRadius: \"4px\",\n    outline: \"none\",\n    padding: 0,\n    color: \"white\",\n  },\n};\n\nModal.setAppElement(\"#root\");\nconst Card = ({\n  bg,\n  cover,\n  previews,\n  title,\n  icons,\n  cfs,\n  demo,\n  code,\n  index,\n  modalIsOpen,\n  setModalIsOpen,\n}) => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  const [mobileOpen, setMobileOpen] = useState(windowDimensions.width < 1024);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n      if (windowDimensions.width < 1024) {\n        setMobileOpen(true);\n      } else {\n        setMobileOpen(false);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div\n      className=\"absolute top-0 left-0 shadow-2xl ring-gray-700\"\n      style={{\n        width: 220,\n        height: 310,\n        backgroundColor: bg,\n        backgroundImage: `url(${cover})`,\n      }}\n    >\n      <Modal\n        isOpen={modalIsOpen[index]}\n        onRequestClose={() => {\n          const tmp = {};\n          tmp[index] = false;\n          setModalIsOpen((prev) => ({ ...prev, ...tmp }));\n        }}\n        style={customStyles}\n      >\n        <div className=\"w-full h-full animate__animated animate__fadeIn bg-input\">\n          <button\n            onClick={() => {\n              const tmp = {};\n              tmp[index] = false;\n              setModalIsOpen((prev) => ({ ...prev, ...tmp }));\n            }}\n            className=\"absolute top-0 right-0 z-50 flex flex-col items-center mt-4 mr-4 text-sm text-white\"\n          >\n            <svg\n              className=\"text-white fill-current\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n            </svg>\n          </button>\n          {mobileOpen ? (\n            <div className={\"w-full h-full\"}>\n              <div className=\"bg-input\">\n                <div className=\"flex flex-col justify-center h-full p-5\">\n                  <div className=\"flex flex-col my-auto\">\n                    <span className=\"font-bold text-gray-200\">PROJECT</span>\n                    <span className=\"mt-1 text-3xl font-extrabold text-gray-50\">\n                      {title}\n                    </span>\n                  </div>\n                  <span className=\"my-auto text-gray-50\">What did I use?</span>\n                  <div className=\"grid items-center grid-flow-col gap-4 px-5 my-auto mt-5 auto-cols-fr justify-items-center\">\n                    {icons.map((icon) => (\n                      <a\n                        key={icon.name}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={icon.path}\n                      >\n                        <img src={icon.icon} alt={icon.name} />\n                      </a>\n                    ))}\n                  </div>\n                  <span className=\"my-auto mt-3 text-2xl font-bold text-gray-50\">\n                    Concept & Funtions\n                  </span>\n                  <div\n                    className=\"flex flex-col items-center p-3 my-auto overflow-auto scrollbar-thin scrollbar-track-black-300 scrollbar-thumb-tag\"\n                    style={{ maxHeight: `40vh` }}\n                  >\n                    {cfs.map((cf) => (\n                      <div\n                        key={cf.title}\n                        className=\"w-full p-3 mt-3 mr-4 bg-black-100\"\n                      >\n                        <div className=\"p-2 text-2xl font-extrabold text-center bg-black-400\">\n                          {cf.title}\n                        </div>\n                        <div className=\"px-4 pt-4\">\n                          {cf.contents.map((content, i) => (\n                            <div key={i} className=\"flex my-1 text-black-900\">\n                              <FontAwesomeIcon\n                                icon={faCheck}\n                                className=\"mt-1 mr-3 text-prime\"\n                              />\n                              <span className=\"text-lg font-medium\">\n                                {content}\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"grid items-center grid-cols-2 my-10 justify-items-center\">\n                    <a target=\"_blank\" rel=\"noreferrer\" href={demo}>\n                      <button className=\"p-2 bg-gray-700 w-36\">\n                        <FontAwesomeIcon icon={faEye} className=\"mr-3\" />\n                        DEMO\n                      </button>\n                    </a>\n                    <a target=\"_blank\" rel=\"noreferrer\" href={code}>\n                      <button className=\"p-2 bg-gray-700 w-36\">\n                        <FontAwesomeIcon icon={faCode} className=\"mr-3\" />\n                        CODE\n                      </button>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className={\"grid w-full h-full grid-cols-2\"}>\n              <Fade\n                transitionDuration={300}\n                autoplay={false}\n                className=\"flex flex-col justify-center h-full\"\n              >\n                {previews.map((preview, i) => (\n                  <div\n                    key={preview.desc}\n                    className=\"flex flex-col items-center each-slide\"\n                  >\n                    <img\n                      src={preview.preview}\n                      alt={preview.desc}\n                      className=\"my-auto\"\n                    />\n                    {preview.src && (\n                      <a\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={preview.src}\n                        className=\"mt-5\"\n                      >\n                        <button className=\"p-2 bg-gray-700 w-36\">\n                          View on Web\n                        </button>\n                      </a>\n                    )}\n                    <span className=\"mt-5 text-2xl text-white text-center\">{`${preview.desc}`}</span>\n                    <span className=\"my-auto text-xl text-gray-300\">{`${\n                      i + 1\n                    } / ${previews.length}`}</span>\n                  </div>\n                ))}\n              </Fade>\n              <div className=\"bg-input\">\n                <div className=\"flex flex-col justify-center h-full p-5\">\n                  <div className=\"flex flex-col my-auto\">\n                    <span className=\"font-bold text-gray-200\">PROJECT</span>\n                    <span className=\"mt-1 text-3xl font-extrabold text-gray-50\">\n                      {title}\n                    </span>\n                  </div>\n                  <span className=\"my-auto text-gray-50\">What did I use?</span>\n                  <div className=\"grid items-center grid-flow-col gap-4 px-5 my-auto mt-5 auto-cols-fr justify-items-center\">\n                    {icons.map((icon) => (\n                      <a\n                        key={icon.name}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        href={icon.path}\n                      >\n                        <img src={icon.icon} alt={icon.name} />\n                      </a>\n                    ))}\n                  </div>\n                  <span className=\"my-auto mt-3 text-2xl font-bold text-gray-50\">\n                    Concept & Funtions\n                  </span>\n                  <div\n                    className=\"flex flex-col items-center p-3 my-auto overflow-auto scrollbar-thin scrollbar-track-black-300 scrollbar-thumb-tag\"\n                    style={{ maxHeight: `40vh` }}\n                  >\n                    {cfs.map((cf) => (\n                      <div\n                        key={cf.title}\n                        className=\"w-full p-3 mt-3 mr-4 bg-black-100\"\n                      >\n                        <div className=\"p-2 text-2xl font-extrabold text-center bg-black-400\">\n                          {cf.title}\n                        </div>\n                        <div className=\"px-4 pt-4\">\n                          {cf.contents.map((content, i) => (\n                            <div key={i} className=\"flex my-1 text-black-900\">\n                              <FontAwesomeIcon\n                                icon={faCheck}\n                                className=\"mt-1 mr-3 text-prime\"\n                              />\n                              <span className=\"text-lg font-medium\">\n                                {content}\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"grid items-center grid-cols-2 my-auto justify-items-center\">\n                    {demo === \"\" ? (\n                      <button className=\"p-2 bg-home w-36 focus:outline-none\">\n                        <FontAwesomeIcon\n                          icon={faBan}\n                          className=\"font-extrabold\"\n                        />\n                      </button>\n                    ) : (\n                      <a target=\"_blank\" rel=\"noreferrer\" href={demo}>\n                        <button className=\"p-2 bg-gray-700 w-36\">\n                          <FontAwesomeIcon icon={faEye} className=\"mr-3\" />\n                          DEMO\n                        </button>\n                      </a>\n                    )}\n                    <a target=\"_blank\" rel=\"noreferrer\" href={code}>\n                      <button className=\"p-2 bg-gray-700 w-36\">\n                        <FontAwesomeIcon icon={faCode} className=\"mr-3\" />\n                        CODE\n                      </button>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/About/Right/imgDialog.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/iconList.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/01/guberEats.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/projectList.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/02/landBnb.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/04/wetube.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/03/landBnbApp.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/05/gwitter.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/06/getflix.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/07/govies.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/08/weatherApp.js",[],"/Users/gyeonghunpark/Documents/GitHub/portfolio/src/pages/Portfolio/Projects/09/coronaDashboard.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":45,"column":6,"nodeType":"222","endLine":45,"endColumn":8,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":77,"column":15,"nodeType":"225","endLine":77,"endColumn":19},{"ruleId":"220","severity":1,"message":"226","line":79,"column":18,"nodeType":"225","endLine":79,"endColumn":22},{"ruleId":"220","severity":1,"message":"227","line":82,"column":16,"nodeType":"225","endLine":82,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":43,"column":6,"nodeType":"222","endLine":43,"endColumn":8,"suggestions":"228"},{"ruleId":"220","severity":1,"message":"229","line":28,"column":11,"nodeType":"230","endLine":28,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":34,"column":6,"nodeType":"222","endLine":34,"endColumn":8,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":39,"column":7,"nodeType":"230","messageId":"234","endLine":39,"endColumn":11},{"ruleId":"232","severity":1,"message":"233","line":59,"column":7,"nodeType":"230","messageId":"234","endLine":59,"endColumn":11},{"ruleId":"220","severity":1,"message":"235","line":85,"column":6,"nodeType":"222","endLine":85,"endColumn":8,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"221","line":29,"column":6,"nodeType":"222","endLine":29,"endColumn":8,"suggestions":"237"},{"ruleId":"220","severity":1,"message":"221","line":50,"column":6,"nodeType":"222","endLine":50,"endColumn":8,"suggestions":"238"},{"ruleId":"220","severity":1,"message":"239","line":25,"column":17,"nodeType":"230","endLine":27,"endColumn":6},{"ruleId":"220","severity":1,"message":"240","line":28,"column":22,"nodeType":"241","endLine":28,"endColumn":63},{"ruleId":"220","severity":1,"message":"242","line":29,"column":18,"nodeType":"230","endLine":29,"endColumn":48},{"ruleId":"220","severity":1,"message":"243","line":30,"column":18,"nodeType":"241","endLine":30,"endColumn":37},{"ruleId":"244","severity":1,"message":"245","line":54,"column":67,"nodeType":"246","messageId":"247","endLine":80,"endColumn":8},{"ruleId":"220","severity":1,"message":"221","line":78,"column":6,"nodeType":"222","endLine":78,"endColumn":8,"suggestions":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'windowDimensions.width'. Either include it or remove the dependency array.","ArrayExpression",["251"],"Assignments to the 'stage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'renderer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'visual' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["252"],"Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["253"],"no-eval","eval can be harmful.","unexpected","React Hook useEffect has missing dependencies: 'canvas', 'mobileOpen', 'resize', and 'windowDimensions.width'. Either include them or remove the dependency array.",["254"],["255"],["256"],"Assignments to the 'cardWidth' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'totalCardIndex' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","BinaryExpression","Assignments to the 'middleCard' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'cardOffset' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'middleCard', 'middleCard', 'middleCard', 'middleCard'.","ArrowFunctionExpression","unsafeRefs",["257"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"258","fix":"261"},{"desc":"262","fix":"263"},{"desc":"258","fix":"264"},{"desc":"258","fix":"265"},{"desc":"258","fix":"266"},"Update the dependencies array to be: [windowDimensions.width]",{"range":"267","text":"268"},{"range":"269","text":"268"},{"range":"270","text":"268"},"Update the dependencies array to be: [canvas, mobileOpen, resize, windowDimensions.width]",{"range":"271","text":"272"},{"range":"273","text":"268"},{"range":"274","text":"268"},{"range":"275","text":"268"},[1174,1176],"[windowDimensions.width]",[1091,1093],[964,966],[2337,2339],"[canvas, mobileOpen, resize, windowDimensions.width]",[757,759],[1347,1349],[1650,1652]]